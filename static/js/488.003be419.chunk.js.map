{"version":3,"file":"static/js/488.003be419.chunk.js","mappings":"8MAEO,SAASA,EAAMC,GAAe,IAAZC,EAASD,EAATC,UACxB,OACCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SACjCH,IAAaC,EAAAA,EAAAA,KAAA,OAAKG,IAAK,0BAA4BJ,EACpDK,IAAI,SAASH,UAAU,sBAI1B,CCLO,SAASI,EAAMP,GAAyB,IAAtBQ,EAAeR,EAAfQ,gBAAiBC,EAAET,EAAFS,GACpCC,GAAoBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA/BF,iBAEL,OACCR,EAAAA,EAAAA,KAAA,OAAAE,SACEI,EAAgBK,OAAS,GAC1BX,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kBAAkBW,QAAS,kBAAMJ,EAAiBD,EAAG,EAACL,SAAC,eAEzEF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAeW,QAAS,kBAAMJ,EAAiBD,EAAG,EAACL,SAAC,YAIzE,CCWA,MAtBA,SAAkBJ,GAAe,IAAZe,EAAQf,EAARe,SAEfC,GAAcL,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBI,WAEAP,EAAoCM,EAApCN,GAAIQ,EAAgCF,EAAhCE,UAAWC,EAAqBH,EAArBG,OAAQjB,EAAac,EAAbd,UAExBO,EAAkBQ,EAAWG,QAAO,SAAAC,GAAM,OAAIA,IAAWX,CAAE,IAE3DY,EAAiBb,EAAgBK,OAAS,EAAII,EAAY,EAAIA,EAElE,OACCK,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,aAAYC,SAAA,EAC1BF,EAAAA,EAAAA,KAACH,EAAM,CAACE,UAAWA,KACnBqB,EAAAA,EAAAA,MAAA,MAAInB,UAAU,mBAAkBC,SAAA,EAC/BkB,EAAAA,EAAAA,MAAA,MAAInB,UAAU,mBAAkBC,SAAA,CAAE,IAAImB,KAAKC,aAAa,SAASC,OAAOP,GAAQ,cAChFI,EAAAA,EAAAA,MAAA,MAAInB,UAAU,mBAAkBC,SAAA,CAAE,IAAImB,KAAKC,aAAa,SAASC,OAAOJ,GAAgB,oBAEzFnB,EAAAA,EAAAA,KAACK,EAAM,CAACC,gBAAiBA,EAAiBC,GAAIA,MAGjD,E,m/BCfA,MARA,WACC,OACCP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACpBF,EAAAA,EAAAA,KAAA,OAAKG,IAAKqB,EAAMpB,IAAI,gBAGvB,ECKA,MATA,SAAiBN,GAAc,IAAZe,EAAQf,EAARe,SAClB,OACCO,EAAAA,EAAAA,MAAA,MAAInB,UAAU,YAAWC,SAAA,EACzBF,EAAAA,EAAAA,KAACyB,EAAI,KACLzB,EAAAA,EAAAA,KAAC0B,EAAS,CAACb,SAAUA,MAGvB,E,48BCEA,MAVA,WACC,OACCb,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SACxByB,GAASA,EAAAA,KAAU,SAAA7B,GAAA,IAAES,EAAET,EAAFS,GAAIQ,EAASjB,EAATiB,UAAWC,EAAMlB,EAANkB,OAAQjB,EAASD,EAATC,UAAS,OACtDC,EAAAA,EAAAA,KAAC4B,EAAQ,CAAUf,SAAU,CAACN,GAAAA,EAAIQ,UAAAA,EAAWC,OAAAA,EAAQjB,UAAAA,IAAtCQ,EAAmD,KAIrE,E,MCVO,SAASsB,EAAO/B,GAAc,IAAXI,EAAQJ,EAARI,SACzB,OACCF,EAAAA,EAAAA,KAAA,WAASC,UAAU,UAASC,UAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACzBA,KAIJ,CCCA,MARA,WACC,OACGF,EAAAA,EAAAA,KAAC6B,EAAO,CAAA3B,UACNF,EAAAA,EAAAA,KAAC8B,EAAY,KAGnB,C","sources":["components/avatar/Avatar.js","components/button/Button.js","components/infoBlock/InfoBlock.js","components/logo/Logo.js","components/twitCard/TwitCard.js","components/twitCardList/TwitCardList.js","components/section/Section.js","pages/TwitCardsPage.js"],"sourcesContent":["import './Avatar.css';\r\n\r\nexport function Avatar ({avatarURL}){\r\n\treturn(\r\n\t\t<div className=\"info-block__avatar\">\r\n\t\t\t{avatarURL && <img src={\"/tech-tasks-twit-cards/\" + avatarURL}\r\n\t\t\talt='avatar' className=\"info-block__user\"\r\n\t\t\t/>}\r\n\t\t\t</div>\r\n\t)\r\n}","import { useContext } from \"react\";\r\nimport CardContext from \"../../Context\";\r\n\r\nimport './Button.css';\r\n\r\nexport function Button ({followingUserId, id}){\r\n\tlet {handleFollowings} = useContext(CardContext);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{followingUserId.length > 0 ? (\r\n\t\t\t<button className=\"followingButton\" onClick={() => handleFollowings(id)}>Following</button>\r\n\t\t\t) : (\r\n\t\t\t<button className=\"followButton\" onClick={() => handleFollowings(id)}>Follow</button>\r\n\t\t)}\r\n\t\t</div>\r\n\t)\r\n}","import React, {useContext} from \"react\";\r\nimport CardContext from \"../../Context\";\r\nimport { Avatar } from \"../avatar/Avatar\";\r\nimport {Button} from \"../button/Button\";\r\nimport './InfoBlock.css';\r\n\r\nfunction InfoBlock ({cardInfo}) {\r\n\r\n\tlet {followings} = useContext(CardContext);\r\n\r\n\tlet {id, followers, tweets, avatarURL} = cardInfo;\r\n\r\n\tlet followingUserId = followings.filter(userId => userId === id);\r\n\r\n\tlet countFollowers = followingUserId.length > 0 ? followers + 1 : followers;\r\n\r\n\treturn (\r\n\t\t<div className=\"info-block\">\r\n\t\t\t<Avatar avatarURL={avatarURL}/>\r\n\t\t\t<ul className=\"info-block__list\">\r\n\t\t\t\t<li className=\"info-block__item\">{new Intl.NumberFormat('ja-JP').format(tweets)} tweets</li>\r\n\t\t\t\t<li className=\"info-block__item\">{new Intl.NumberFormat('ja-JP').format(countFollowers)} followers</li>\r\n\t\t\t</ul>\r\n\t\t\t<Button followingUserId={followingUserId} id={id}/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InfoBlock;","import './Logo.css';\r\nimport logo from \"../../images/logo.png\";\r\n\r\nfunction Logo (){\r\n\treturn (\r\n\t\t<div className='logo'>\r\n\t\t\t<img src={logo} alt=\"logo Go IT\"/>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Logo;","import InfoBlock from \"../infoBlock/InfoBlock\";\r\nimport Logo from \"../logo/Logo\";\r\n\r\nimport './TwitCard.css';\r\n\r\nfunction TwitCard({cardInfo}) {\r\n\treturn (\r\n\t\t<li className=\"twit-card\">\r\n\t\t<Logo/>\r\n\t\t<InfoBlock cardInfo={cardInfo}/>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default TwitCard;","import TwitCard from '../twitCard/TwitCard';\r\nimport './TwitCardList.css';\r\nimport cards from '../../users.json';\r\n\r\nfunction TwitCardList () {\r\n\treturn(\r\n\t\t<ul className='twit-cards'>\r\n\t\t\t{cards && cards.map(({id, followers, tweets, avatarURL}) => \r\n\t\t\t<TwitCard key={id} cardInfo={{id, followers, tweets, avatarURL}}/>\r\n\t\t\t)}\r\n\t\t</ul>\r\n\t)\r\n};\r\n\r\nexport default TwitCardList;","import './Section.css';\r\n\r\nexport function Section ({children}){\r\n\treturn (\r\n\t\t<section className='section'>\r\n\t\t\t<div className='container'>\r\n\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t)\r\n};","import TwitCardList from '../components/twitCardList/TwitCardList';\r\nimport { Section } from '../components/section/Section';\r\n\r\nfunction TwitCardsPage () {\r\n\treturn (\t\t\r\n    <Section>\r\n      <TwitCardList/>\r\n    </Section>\r\n\t)\r\n};\r\n\r\nexport default TwitCardsPage;"],"names":["Avatar","_ref","avatarURL","_jsx","className","children","src","alt","Button","followingUserId","id","handleFollowings","useContext","CardContext","length","onClick","cardInfo","followings","followers","tweets","filter","userId","countFollowers","_jsxs","Intl","NumberFormat","format","logo","Logo","InfoBlock","cards","TwitCard","Section","TwitCardList"],"sourceRoot":""}